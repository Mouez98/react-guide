{"version":3,"sources":["Person/Card.js","App.js","reportWebVitals.js","index.js","App.module.css","Person/Card.module.css"],"names":["Card","props","change","click","age","name","children","className","classes","onClick","type","onChange","value","App","state","persons","id","showPersons","changeNameHandler","event","personIndex","findIndex","p","person","target","setState","togglePersonsHandler","doesShow","deletePersonHandler","splice","btnClass","this","map","index","Red","assignedClasses","length","push","red","bold","join","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4PA8BeA,MAbf,SAAcC,GACZ,IAAQC,EAAuCD,EAAvCC,OAAQC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,IAAKC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAElC,OACE,sBAAKC,UAAWC,IAAQR,KAAxB,UACI,qBAAIS,QAASN,EAAb,yBAAiCE,KACjC,sCAASD,EAAT,OACA,4BAAIE,IACJ,uBAAOI,KAAK,OAAOC,SAAUT,EAAQU,MAAOP,Q,gBCH9CQ,E,4MACJC,MAAQ,CACNC,QAAS,CACP,CAAEC,GAAI,QAASX,KAAM,SAAUD,IAAK,IACpC,CAAEY,GAAI,SAAUX,KAAM,MAAOD,IAAK,IAClC,CAAEY,GAAI,OAAQX,KAAM,MAAOD,IAAK,KAElCa,aAAa,G,EAafC,kBAAoB,SAACC,EAAOH,GAC1B,IAAMI,EAAc,EAAKN,MAAMC,QAAQM,WAAU,SAACC,GAChD,OAAOA,EAAEN,KAAOA,KAGZO,EAAM,eACP,EAAKT,MAAMC,QAAQK,IAGxBG,EAAOlB,KAAOc,EAAMK,OAAOZ,MAE3B,IAAMG,EAAO,YAAO,EAAKD,MAAMC,SAE/BA,EAAQK,GAAeG,EAEvB,EAAKE,SAAS,CAAEV,QAASA,K,EAG3BW,qBAAuB,WACrB,IAAMC,EAAW,EAAKb,MAAMG,YAC5B,EAAKQ,SAAS,CACZR,aAAcU,K,EAGlBC,oBAAsB,SAACR,GAKrB,IAAML,EAAO,YAAO,EAAKD,MAAMC,SAC/BA,EAAQc,OAAOT,EAAa,GAC5B,EAAKK,SAAS,CAAEV,QAASA,K,4CAG3B,WAAU,IAAD,OACHA,EAAU,KACVe,EAAW,GACXC,KAAKjB,MAAMG,cACbF,EACE,8BACGgB,KAAKjB,MAAMC,QAAQiB,KAAI,SAACT,EAAQU,GAC/B,OACE,cAAC,EAAD,CACE9B,MAAO,kBAAM,EAAKyB,oBAAoBK,IACtC5B,KAAMkB,EAAOlB,KACbD,IAAKmB,EAAOnB,IAEZF,OAAQ,SAACiB,GAAD,OAAW,EAAKD,kBAAkBC,EAAOI,EAAOP,MADnDO,EAAOP,SAOtBc,EAAWtB,IAAQ0B,KAOrB,IAAMC,EAAkB,GASxB,OAPIJ,KAAKjB,MAAMC,QAAQqB,QAAU,GAC/BD,EAAgBE,KAAK7B,IAAQ8B,KAE3BP,KAAKjB,MAAMC,QAAQqB,QAAU,GAC/BD,EAAgBE,KAAK7B,IAAQ+B,MAI7B,sBAAKhC,UAAWC,IAAQK,IAAxB,UACE,mBAAGN,UAAW4B,EAAgBK,KAAK,KAAnC,8BACA,wBACAjC,UAAWuB,EACXrB,QAASsB,KAAKL,qBAFd,4BAKCX,S,GAjGS0B,aAuGH5B,ICjHA6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,IAAM,iBAAiB,KAAO,kBAAkB,IAAM,iBAAiB,gBAAgB,6B,kBCAjKD,EAAOC,QAAU,CAAC,KAAO,sB","file":"static/js/main.3ddb31d8.chunk.js","sourcesContent":["import classes from \"./Card.module.css\";\r\n// import styled from \"styled-components\";\r\n\r\n// const StyledDiv = styled.div`\r\n//   box-shadow: 0 3px 4px #ccc;\r\n//   border: 1px solid #eee;\r\n//   margin: 1rem auto;\r\n//   display: block;\r\n//   padding: 15px;\r\n//   width: 60%;\r\n//   :hover {\r\n//       background-color: #eee;\r\n//   }\r\n//   @media (min-width: 500px) {\r\n//     width: 450px;\r\n//   }\r\n// `;\r\nfunction Card(props) {\r\n  const { change, click, age, name, children } = props;\r\n\r\n  return (\r\n    <div className={classes.Card}>\r\n        <h2 onClick={click}>My name is: {name}</h2>\r\n        <p>Age: {age} </p>\r\n        <p>{children}</p>\r\n        <input type=\"text\" onChange={change} value={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\nimport Card from \"./Person/Card.js\";\nimport classes from './App.module.css';\n// import classes from \"./App.css\";\n// import styled from \"styled-components\";\n// import Radium,{StyleRoot} from 'radium';\n//  import Search from './Search.js';\n\n// const Button = styled.button`\n//       font: inherit;\n//        border-image: linear-gradient(150deg,  #eee, #ccc) 1 ;\n//        padding: 10px 15px;\n//        margin: 1rem 0;\n//        cursor: pointer;\n//        background-color: ${props => props.alt ? \"red\": \"green\"};\n//        color: white;\n//        :hover {\n//          background-color:  ${props => props.alt ? \"salmon\": \"lightgreen\"};\n//          color: #000\n//        }\n// `;\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"hjskl\", name: \"Minato\", age: 40 },\n      { id: \"ssmlkl\", name: \"Sai\", age: 26 },\n      { id: \"mljk\", name: \"Ken\", age: 27 },\n    ],\n    showPersons: false,\n  };\n  // const App = props => {\n  // const [personState, setPersonState ] = useState({\n  //   persons:[\n  //     {name: \"Minato\", age: 40},\n  //     {name: \"Ken\", age: 27},\n  //     {name: \"Sai\", age: 23},\n  //   ]\n  // });\n  // const [otherState, setOtherState] = useState(\"Other state\");\n  //  console.log(personState, otherState)\n\n  changeNameHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex((p) => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex],\n    };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n\n    persons[personIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({\n      showPersons: !doesShow,\n    });\n  };\n  deletePersonHandler = (personIndex) => {\n    // Old way of getting a copy from array\n    // const persons = this.state.persons.slice();\n\n    //Modern way of getting array from array\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({ persons: persons });\n  };\n\n  render() {\n    let persons = null;\n    let btnClass = '';\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Card\n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                change={(event) => this.changeNameHandler(event, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n      btnClass = classes.Red\n      //  style.backgroundColor = \"red\";\n      //  style[\":hover\"]= {\n      //   backgroundColor: 'salmon ',\n      // }\n    }\n\n    const assignedClasses = [];\n\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push(classes.red);\n    }\n    if (this.state.persons.length <= 1) {\n      assignedClasses.push(classes.bold);\n    }\n\n    return (\n      <div className={classes.App}>\n        <p className={assignedClasses.join(\" \")}>It's really work</p>\n        <button\n        className={btnClass}\n        onClick={this.togglePersonsHandler}>\n          Toggle Persons\n          </button>\n        {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__SOpNW\",\"App-link\":\"App_App-link__11ttY\",\"red\":\"App_red__1RLh6\",\"bold\":\"App_bold__2ajHP\",\"Red\":\"App_Red__2lICm\",\"App-logo-spin\":\"App_App-logo-spin__2CIJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__PFwmp\"};"],"sourceRoot":""}